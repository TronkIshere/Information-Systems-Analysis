// let's imagine this file is autogenerated from the backend
// ideally, we want to keep these api related types in sync
// with the backend instead of manually writing them out

export type ResponseData<T> = {
  code: number;
  data: T | null;
  message: string;
};

export interface ResponseAPI<T> {
  code: number;
  message: string;
  data: T | null;
}
export type BaseEntity = {
  id: string;
  createdAt: number;
};

export type Entity<T> = {
  [K in keyof T]: T[K];
} & BaseEntity;

export type Meta = {
  page: number;
  total: number;
  totalPages: number;
};

export type User = Entity<{
  firstName: string;
  lastName: string;
  email: string;
  role: "ADMIN" | "USER";
  teamId: string;
  bio: string;
}>;

export type AuthResponse = Entity<{
  accessToken: string;
  refreshToken: string;
  status: string;
  userType: "STUDENT" | "LECTURER" | "ADMIN";
  userId: string;
}>;

export type ErrorResponse = {
  code: number;
  message: string;
};

export type Team = Entity<{
  name: string;
  description: string;
}>;

export type Discussion = Entity<{
  title: string;
  body: string;
  teamId: string;
  author: User;
  public: boolean;
}>;

export type Comment = Entity<{
  body: string;
  discussionId: string;
  author: User;
}>;

export interface LecturerResponse {
  id: string;
  lecturerCode: string;
  academicRank?: string;
  salary?: number;
  hireDate?: string;
  researchField?: string;
  name: string;
  email: string;
  phoneNumber: string;
  status: string;
  birthDay?: string;
  gender?: boolean;
}

export type LecturerListResponse = LecturerResponse[];
